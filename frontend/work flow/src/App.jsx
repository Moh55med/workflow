import { useState, useEffect } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'
// Add chart imports
import { Bar } from 'react-chartjs-2';
import {
  Chart as ChartJS,
  CategoryScale,
  LinearScale,
  BarElement,
  Title,
  Tooltip,
  Legend,
} from 'chart.js';

ChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);

function App() {
  const [count, setCount] = useState(0)
  const [backendMessage, setBackendMessage] = useState('');
  const [tourismData, setTourismData] = useState(null);
  const [tourismError, setTourismError] = useState('');

  useEffect(() => {
    fetch('http://localhost:8000/hello')
      .then((response) => response.json())
      .then((data) => setBackendMessage(data.message))
      .catch((error) => setBackendMessage('Error: ' + error));
  }, []);

  useEffect(() => {
    fetch('http://localhost:8000/analyze_tourism')
      .then((response) => response.json())
      .then((data) => setTourismData(data.data))
      .catch((error) => setTourismError('Error: ' + error));
  }, []);

  // Helper to format numbers with commas
  const formatNumber = (num) => num?.toLocaleString('en-US');

  // Prepare chart data for Top Countries
  const topCountriesChartData = tourismData && tourismData.top_countries ? {
    labels: tourismData.top_countries.map(c => c.country),
    datasets: [
      {
        label: 'Tourists',
        data: tourismData.top_countries.map(c => c.tourists),
        backgroundColor: 'rgba(54, 162, 235, 0.6)',
      },
    ],
  } : null;

  // Prepare chart data for Monthly Arrivals
  const monthlyArrivalsChartData = tourismData && tourismData.monthly_arrivals ? {
    labels: Object.keys(tourismData.monthly_arrivals),
    datasets: [
      {
        label: 'Arrivals',
        data: Object.values(tourismData.monthly_arrivals),
        backgroundColor: 'rgba(255, 99, 132, 0.6)',
      },
    ],
  } : null;

  return (
    <>
      <div>
        <h2>Backend Message:</h2>
        <p>{backendMessage}</p>
      </div>
      <div>
        <h2>Tourism Analysis:</h2>
        {tourismError && <p>{tourismError}</p>}
        {tourismData ? (
          <div>
            <p><strong>Total Tourists:</strong> {formatNumber(tourismData.total_tourists)}</p>
            <p><strong>Religious Tourists:</strong> {formatNumber(tourismData.religious_tourists)}</p>
            <p><strong>Regular Tourists:</strong> {formatNumber(tourismData.regular_tourists)}</p>
            <div>
              <strong>Top Countries:</strong>
              {topCountriesChartData && (
                <Bar data={topCountriesChartData} options={{ responsive: true, plugins: { legend: { display: false }, title: { display: true, text: 'Top Countries by Tourists' } } }} />
              )}
            </div>
            <div>
              <strong>Monthly Arrivals:</strong>
              {monthlyArrivalsChartData && (
                <Bar data={monthlyArrivalsChartData} options={{ responsive: true, plugins: { legend: { display: false }, title: { display: true, text: 'Monthly Arrivals' } } }} />
              )}
            </div>
          </div>
        ) : (
          !tourismError && <p>Loading...</p>
        )}
      </div>
      {/* References section */}
      <footer style={{ marginTop: '2rem', borderTop: '1px solid #ccc', paddingTop: '1rem' }}>
        <h3>References</h3>
        <ul>
          <li>Tourism data generated by backend workflow (simulated data)</li>
        </ul>
      </footer>
    </>
  )
}

export default App
